% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dj_fetch.R
\name{dj_fetch}
\alias{dj_fetch}
\title{Get datajoint table}
\format{
string; format to fetch data. either "dict" for dictionary or "df" for data.frame
}
\usage{
dj_fetch(
  sch = NULL,
  tbl = NULL,
  restrictions = NULL,
  query = NULL,
  format = "dict",
  callback = NULL,
  add_vars = list(),
  ...
)
}
\arguments{
\item{sch}{the names of the schema(s) used to fetch. Must be used in combination with tbl or query.
If providing tbl, sch should be a string.
If providing query, sch should consist of all schemas used in the query. Can be a string or a vector if multiple schemas are used.}

\item{tbl}{the table to fetch. Must specify either (sch and tbl) or query}

\item{restrictions}{a vector of strings containing restrictions. See details. Only used with sch and tbl}

\item{query}{a python datajoint query as a string. Must specify either (sch and tbl) or sch and query}

\item{callback}{a callback function to process data returned from the query}

\item{add_vars}{a list of additional variables to add to the data, optional}

\item{...}{additional arguments passed to callback}
}
\value{
if callback is specified, data is returned in the form of the callback's return. otherwise, returns data fetched from datajoint table as a list.
}
\description{
Fetches data from a datajoint table, returns as a list or whatever format is returned from the callback.
}
